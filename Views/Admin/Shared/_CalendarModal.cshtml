<div className="modal fade" id="apptsModal" tabIndex="-1" aria-labelledby="apptsModalLabel"
            aria-hidden="true">
            <div className="modal-dialog modal-dialog-centered">
                <div className="modal-content d-flex justify-content-between">
                    <div id="modal-header" className="rounded-top p-1 text-center">
                        <h1 className="modal-title fs-3" id="apptsModalLabel">{dateDisplay}</h1>
                        <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close" onClick={clearStates}></button>
                    </div>
                    <div id="modal-body" className="mt-2 col-12 d-flex flex-column align-items-center flex-grow-1 text-darkgray">
                        {appointments.length === 0 && !addingAppts && <h2 className="fs-5">Add Appointments Below</h2>}
                        {loading && <div className="spinner-border" role="status"></div>}
                        {error && <div className="alert alert-danger">{error}</div>}
                        {addingAppts ?
                            <div className="mt-2 fs-4 col-11 d-flex flex-wrap align-items-center">
                                <h3 className="col-12 text-center">Add Available Time</h3>
                                {timeSelector()}
                                <div className="d-flex justify-content-evenly col-12 my-2">
                                    <button type="button" className="custom-btn success-btn fs-5" onClick={addAppt}>Confirm Time</button>
                                    <button type="button" className="custom-btn danger-btn fs-5" onClick={clearStates}>Cancel</button>
                                </div>
                            </div>
                            :
                            appointments.map((appt, index) => {
                                let client
                                appt.Client && (client = appt.Client)
                                let display = ''
                                if (appt.Status === 2 || appt.Status === 4) {
                                    const apptType = services.find(service => service.Id === appt.ApptTypeId)
                                    display = apptType.Name
                                } else {
                                    display = statuses[appt.Status]
                                }
                                const time = new Date(appt.DateTime).toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });

                                return (
                                    <div key={appt.Id} id={appt.Id} className="d-flex flex-column align-items-center col-11">
                                        <div className="appt-card col-12 px-1 mt-3 d-flex flex-wrap align-items-center">
                                            <div className="appt-card-header text-purple col-12 d-flex px-1" onClick={() => toggleDetails(appt)}>
                                                <h2 className="fs-5 my-1 col-3">{time}</h2>
                                                <h2 className="fs-5 my-1 col-6 text-center">{display}</h2>
                                                <h2 className="my-1 col-3"></h2>
                                            </div>
                                            {apptDetails === appt &&
                                                <div className={`appt-details pt-2 col-12 text-center ${apptDetails && 'fade-in'}`}>
                                                    <h2 className="fs-5">Status: <span className="text-purple">{statuses[appt.Status]}</span></h2>
                                                    {displayService &&
                                                        <div>
                                                            <h2 className="fs-5">Class Name: <span className="text-purple">{displayService.Name}</span></h2>
                                                            <h2 className="fs-5">Price: <span className="text-purple">${displayService.Price}</span></h2>
                                                        </div>
                                                    }
                                                    {editingAppt ? (
                                                        <div className="mt-2 fs-5 col-12 d-flex flex-column align-items-center">
                                                            {timeSelector()}
                                                        </div>
                                                    ) : (
                                                        <h2 className="fs-5">Time: <span className="text-purple">{time}</span></h2>
                                                    )}
                                                    {displayService &&
                                                        <h2 className="fs-5">Duration: <span className="text-purple">{displayService.Duration} min</span></h2>
                                                    }
                                                    {client &&
                                                        <div className="my-2">
                                                            <h2 className="text-decoration-underline">Client Information</h2>
                                                            <p className="fs-5 m-0 text-purple fw-bold">{client.Name}</p>
                                                            <p className="fs-5 m-0 text-purple fw-bold">{client.Phone.includes('-') ? client.Phone : `${client.Phone.slice(0, 3)}-${client.Phone.slice(3, 6)}-${client.Phone.slice(6)}`}</p>
                                                            <p className="fs-5 m-0 text-purple fw-bold">{client.Email}</p>
                                                        </div>
                                                    }
                                                    {appt.Status === 1 &&
                                                        <div className="d-flex justify-content-evenly my-3">
                                                            <button type="button" className="custom-btn success-btn fs-5 col-3" onClick={approveAppt}>Approve</button>
                                                            <button type="button" className="custom-btn danger-btn fs-5 col-3" onClick={denyAppt}>Deny</button>
                                                        </div>
                                                    }
                                                    {deletingAppt || editingAppt ?
                                                        deletingAppt ?
                                                            <div className="mt-2 fs-4 col-12 pink-border d-flex flex-column align-items-center">
                                                                <h3>Are you sure you want to delete this appointment?</h3>
                                                                <div className="d-flex justify-content-evenly col-12">
                                                                    <button type="button" className="custom-btn danger-btn fs-5 my-2" data-bs-dismiss="modal" onClick={deleteAppt}>Confirm Delete</button>
                                                                    <button type="button" className="custom-btn fs-5 my-2" onClick={toggleDeleting}>Cancel</button>
                                                                </div>
                                                            </div>
                                                            : // Editing Appt
                                                            <div className="d-flex justify-content-evenly col-12">
                                                                <button type="button" className="custom-btn success-btn fs-5 my-2" onClick={editAppt}>Save</button>
                                                                <button type="button" className="custom-btn fs-5 my-2" onClick={toggleEditing}>Cancel</button>
                                                            </div>
                                                        :
                                                        <div className="d-flex flex-wrap justify-content-evenly mt-3 col-12">
                                                            <button type="button" className="custom-btn success-btn col-12 col-md-4 fs-5 mb-3" onClick={completeAppt}>Set Complete</button>
                                                            <button type="button" className="custom-btn col-12 col-md-3 fs-5 mb-3" onClick={toggleEditing}>Edit</button>
                                                            <button type="button" className="custom-btn danger-btn col-12 col-md-4 fs-5 mb-3" onClick={toggleDeleting}>Delete</button>
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>

                                )
                            })}
                    </div>
                    <div id="modal-footer" className="d-flex align-self-end justify-content-end mt-2">
                        <button type="button" className="custom-btn fs-5 m-1" onClick={() => setAddingAppts(true)}>Add Time Slot</button>
                        <button type="button" className="custom-btn fs-5 m-1" data-bs-dismiss="modal" onClick={clearStates}>Close</button>
                    </div>
                </div>
            </div>
        </div>

@section Scripts {
        <script type="module" src="~/js/admin/calendarModal.js"></script>
}